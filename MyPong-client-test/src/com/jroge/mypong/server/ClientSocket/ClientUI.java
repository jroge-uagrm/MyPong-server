/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jroge.mypong.server.ClientSocket;

import com.jroge.mypong.server.ClientSocket.MyClasses.Client;
import com.jroge.mypong.server.ClientSocket.MyClasses.ContainerObject;
import com.jroge.mypong.server.ClientSocket.Events.ClientMainThreadEvents;
import com.google.gson.Gson;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author jroge
 */
public class ClientUI extends javax.swing.JFrame implements ClientMainThreadEvents {

    private final Client client;
    private final String host = "127.0.0.1";
    private final int port = 32000;
    private boolean clientConnected;
    private String[] connectedClients;
    private final Gson gson;
    private String key;

    /**
     * Creates new form ClientUI
     */
    public ClientUI() {
        initComponents();
        setLogAlwaysOnTheButtom();
        client = new Client(host, port, this);
        gson = new Gson();
        refreshComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDisconnect = new javax.swing.JButton();
        btnConnect = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnSendMessage = new javax.swing.JButton();
        txfMessage = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaLog = new javax.swing.JTextArea();
        lblName = new javax.swing.JLabel();
        cbbConnectedClients = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDisconnect.setBackground(java.awt.Color.red);
        btnDisconnect.setText("Disconnect");
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        btnConnect.setBackground(java.awt.Color.green);
        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        lblStatus.setText("Disconnected");

        btnSendMessage.setBackground(java.awt.Color.white);
        btnSendMessage.setText("Send message");
        btnSendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMessageActionPerformed(evt);
            }
        });

        txfMessage.setText("Hola");

        txaLog.setColumns(20);
        txaLog.setFont(new java.awt.Font("Fira Code", 0, 18)); // NOI18N
        txaLog.setRows(5);
        txaLog.setFocusable(false);
        jScrollPane2.setViewportView(txaLog);

        lblName.setFont(new java.awt.Font("Fira Code", 0, 24)); // NOI18N
        lblName.setText("Client-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblStatus)
                        .addGap(141, 141, 141)
                        .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfMessage)
                    .addComponent(btnSendMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(cbbConnectedClients, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(lblName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbbConnectedClients, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txfMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        client.disconnect();
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        client.connect();
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMessageActionPerformed
        int destinationIndex = cbbConnectedClients.getSelectedIndex();
        String origin = key,
                body = txfMessage.getText(),
                destination = connectedClients[destinationIndex];
        client.sendMessage(new ContainerObject(
                origin,
                body,
                destination
        ));
    }//GEN-LAST:event_btnSendMessageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnSendMessage;
    private javax.swing.JComboBox<String> cbbConnectedClients;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextArea txaLog;
    private javax.swing.JTextField txfMessage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onClientConnected() {
        refreshComponents();
    }

    @Override
    public void onClientNewResponse(String serverResponse) {
        ContainerObject object = gson.fromJson(serverResponse, ContainerObject.class);
        if (object.origin.equals("server")) {
            String[] elements = object.body.split("_");
            String action = elements[0];
            switch (action) {
                case "newKey":
                    key = elements[1];
                    changeName(key);
                    break;
                case "clientList":
                    connectedClients = gson.fromJson(elements[1], String[].class);
                    changeClientList();
                    break;
            }
            client.sendMessage(new ContainerObject(key, "OK", "server"));
        }else{
            
        }
    }

    @Override
    public void onClientConnectionLost() {
        client.connect();
    }

    @Override
    public void onClientDisconnected() {
        refreshComponents();
    }

    @Override
    public void onClientTryingReconnect() {
        refreshComponents();
    }

    @Override
    public void mainThreadLog(String string) {
        log(string);
    }

    private void setLogAlwaysOnTheButtom() {
        DefaultCaret caret = (DefaultCaret) txaLog.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }

    private void changeName(String newName) {
        lblName.setText(newName);
    }

    private void refreshComponents() {
        clientConnected = client.isConnected();
        btnConnect.setEnabled(!clientConnected);
        btnDisconnect.setEnabled(clientConnected);
        btnSendMessage.setEnabled(clientConnected);
        lblStatus.setText(clientConnected ? "CONNECTED" : "DISCONNECTED");
    }

    private void changeClientList() {
        cbbConnectedClients.removeAllItems();
        for (String clientKey : connectedClients) {
            cbbConnectedClients.addItem(clientKey);
        }
    }

    private void log(String msg) {
        txaLog.append(msg + '\n');
    }
}
