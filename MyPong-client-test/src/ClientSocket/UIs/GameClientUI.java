/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClientSocket.UIs;

import ClientSocket.MyClasses.Auxiliaries.GameActions;
import ClientSocket.MyClasses.Auxiliaries.User;
import ClientSocket.MyClasses.Principals.GameClient;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author jroge
 */
public class GameClientUI extends javax.swing.JFrame implements GameActions {

    private final GameClient gameClient;

    /**
     * Creates new form ClientUI
     */
    public GameClientUI() {
        initComponents();
        gameClient = new GameClient(this);
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txfMessage1 = new javax.swing.JTextField();
        btnInvite = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txfUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        txfPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUsers = new javax.swing.JList<>();
        btnLeaveRoom = new javax.swing.JButton();
        btnCreateRoom = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPartners = new javax.swing.JList<>();
        lblRoom = new javax.swing.JLabel();

        txfMessage1.setText("Hola");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnInvite.setBackground(new java.awt.Color(255, 255, 102));
        btnInvite.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnInvite.setText("Invite");
        btnInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInviteActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Fira Code", 0, 24)); // NOI18N
        lblName.setText("Client");

        txfUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfUsername.setText("jorge");

        btnLogin.setBackground(new java.awt.Color(102, 255, 204));
        btnLogin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(204, 255, 204));
        btnRegister.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        txfPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfPassword.setText("jorge");

        jScrollPane1.setViewportView(lstUsers);

        btnLeaveRoom.setBackground(new java.awt.Color(255, 51, 51));
        btnLeaveRoom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLeaveRoom.setText("Leave room");
        btnLeaveRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveRoomActionPerformed(evt);
            }
        });

        btnCreateRoom.setBackground(new java.awt.Color(102, 255, 102));
        btnCreateRoom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCreateRoom.setText("Create room");
        btnCreateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateRoomActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstPartners);

        lblRoom.setFont(new java.awt.Font("Fira Code", 0, 24)); // NOI18N
        lblRoom.setText("Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnCreateRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegister, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                        .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txfPassword, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txfUsername, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInvite, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnLeaveRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(lblRoom))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblRoom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRegister))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInvite, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLeaveRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInviteActionPerformed
        int[] indices = lstUsers.getSelectedIndices();
        if (indices.length == 1) {
            gameClient.sendInvitation(indices[0]);
        } else {
            showMessageDialog("You must select 1 player");
        }
    }//GEN-LAST:event_btnInviteActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        gameClient.connectByLogin(txfUsername.getText(), txfPassword.getText());
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        gameClient.connectByRegister(txfUsername.getText(), txfPassword.getText());
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnLeaveRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveRoomActionPerformed
        gameClient.leaveRoom();
    }//GEN-LAST:event_btnLeaveRoomActionPerformed

    private void btnCreateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateRoomActionPerformed
        gameClient.createRoom();
    }//GEN-LAST:event_btnCreateRoomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameClientUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameClientUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateRoom;
    private javax.swing.JButton btnInvite;
    private javax.swing.JButton btnLeaveRoom;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JList<String> lstPartners;
    private javax.swing.JList<String> lstUsers;
    private javax.swing.JTextField txfMessage1;
    private javax.swing.JPasswordField txfPassword;
    private javax.swing.JTextField txfUsername;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refresh() {
        lblName.setText(gameClient.getUsername());

        boolean connected = gameClient.isConnected();
        lblRoom.setText(gameClient.isInRoom() ? "My room" : "");
        btnInvite.setEnabled(connected && gameClient.isInRoom());
        btnCreateRoom.setEnabled(connected && !gameClient.isInRoom());
        btnLeaveRoom.setEnabled(connected && gameClient.isInRoom());

        boolean sending = gameClient.sending();
        txfUsername.setEnabled(!connected && !sending);
        txfPassword.setEnabled(!connected && !sending);
        btnLogin.setEnabled(!connected && !sending);
        btnRegister.setEnabled(!connected && !sending);

        DefaultListModel modeloLista = new DefaultListModel();
        lstUsers.setModel(modeloLista);
        LinkedList<User> userList = gameClient.getUserList();
        String key = gameClient.getKey();
        for (User user : userList) {
            if (!user.key.equals(key)) {
                modeloLista.addElement(user.username + (user.matchId.equals("") ? "" : "-PLAYING"));
            }
        }

        modeloLista = new DefaultListModel();
        lstPartners.setModel(modeloLista);
        userList = gameClient.getPartnerList();
        for (User user : userList) {
            modeloLista.addElement(user.username);
        }
    }

    @Override
    public void showMessageDialog(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }

    @Override
    public int showConfirmDialog(String msg) {
        return JOptionPane.showConfirmDialog(rootPane, msg);
    }
}
